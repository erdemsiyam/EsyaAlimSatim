@model AlAbiVerAbi.ilan

@{
    Layout = "~/Views/Shared/_HesapLayout.cshtml";
}

<div class="row"><div class="col-md-12 text-center"><h2><i>İlan Düzenle</i></h2></div></div>
<br />
@using (Html.BeginForm("ilanDuzenle", "Hesap", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>ilan</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)


    <div class="form-group">
        @Html.LabelFor(model => model.kategori_id, "kategori_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("kategori_id", (SelectList)ViewBag.Kategoriler, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.kategori_id, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.satildimi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.satildimi)
                @Html.ValidationMessageFor(model => model.satildimi, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ilanacikmi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ilanacikmi)
                @Html.ValidationMessageFor(model => model.ilanacikmi, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.baslik, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.baslik, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.baslik, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.aciklama, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.aciklama, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.aciklama, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.sorunu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.sorunu, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.sorunu, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.kullanimsuresi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.kullanimsuresi, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.kullanimsuresi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.il, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.il, (SelectList)ViewBag.İller, "Şehir Seçiniz", new { @class = "form-control dropdown" })
            @Html.ValidationMessageFor(model => model.il, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ilce, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.ilce, (SelectList)ViewBag.İlçeler, null, new { @class = "form-control dropdown" })
            @Html.ValidationMessageFor(model => model.ilce, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.mahalle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.mahalle, (SelectList)ViewBag.Mahalleler, null, new { @class = "form-control dropdown" })
            @Html.ValidationMessageFor(model => model.mahalle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.konum, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.konum, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.konum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fiyat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fiyat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fiyat, "", new { @class = "text-danger" })
        </div>
    </div>
    @{
        List<ilanResim> resimler = Model.ilanResim.OrderBy(x => x.sirasi).ToList(); // olan resimler aşağıda göstertilir.
        int resimSayi = resimler.Count;
        int sayac = 0;
    }
    <div class="form-group">
        Resimler (En az 1 en fazla 3 resim seçilmeli)
        <div class="col-md-12">
            <div class="col-md-4">
                @{
                    if (sayac < resimSayi && resimler[sayac].sirasi == 1)
                    {
                        <img src="~/Image/ilan/@resimler[sayac].ad" width="200" height="200" />
                        sayac++;
                    }
                    else
                    {
                        <h3>1. Resim Yok.</h3>
                    }

                }
                }
                <input type="file" name="gelenResim[0]" />
            </div>
            <div class="col-md-4">
                @{
                    if (sayac < resimSayi && resimler[sayac].sirasi == 2)
                    {
                        <img src="~/Image/ilan/@resimler[sayac].ad" width="200" height="200" />
                        sayac++;
                    }
                    else
                    {
                        <h3> 2.Resim Yok.</h3>
                    }

                }
                <input type="file" name="gelenResim[1]" />
            </div>
            <div class="col-md-4">
                @{
                    if (sayac < resimSayi && resimler[sayac].sirasi == 3)
                    {
                        <img src="~/Image/ilan/@resimler[sayac].ad" width="200" height="200" />
                        sayac++;
                    }
                    else
                    {
                        <h3>3. Resim Yok.</h3>
                    }
                }
                <input type="file" name="gelenResim[2]" />
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Kaydet" class="btn btn-default" />
        </div>
    </div>
    @Html.ValidationSummary()
</div>
}

<script>

    $("#il").change(function () {

            var ddlCountry = $(this); // ülke dropdownlist'i elimize aldık
            var il_id = ddlCountry.val(); // seçilen ülke id'sini aldık

        if (il_id != "0" || il_id != "-1") // eğer ülke id' değeri -1 den farklıysa(seçilmemiş), 0 'dan farklıysa (Lütfen seçiniz optionu) , kişi bir ülke seçmiş demektir, ozaman işlemi yaparız
            {
            $("#ilce option").not(":first").remove(); // ülke dropdownlist'in ilk elemanı hariç hepsini sil. ilk elemanı = lütfen seçiniz yazısıdır.
            $("#mahalle option").not(":first").remove(); // ülke dropdownlist'in ilk elemanı hariç hepsini sil. ilk elemanı = lütfen seçiniz yazısıdır.
                $.ajax({ // ajax ile asenkron sunucu isteği yaparız
                    method: "GET", // tip get
                    url: '@Url.Action("Get_ilce", "Hesap")' + '/' + il_id // url'yi Home/GetCitiesByCountry/id : olarak yaparız. seçilen ülkeye göre şehir getirtiriz.
                }).done( // başarılı olduğunda
                    function (result) { // result = geri gelen değer

                        var ddlCity = $("#ilce"); // şehir dropdownlist'i elimize alırız

                        for (var i = 0; i < result.length; i++) { // gelen değerde kaç satır veri varsa okadar döneriz.
                            var cityName = result[i].Ad; // sıradaki verinin şehrin adını
                            var cityId = result[i].id; // şehrin id'sini alırız
                            var opt = $("<option></option>"); // option öğesi oluşturur, aşağıda da buna özellik veririz.

                            opt.text(cityName); // option'un text'ine şehrin ismini ver
                            opt.attr("value", cityId); // value özelliğine şehrin id'sini ver.
                            //opt.val(cityId); // şehrin id'si böyle de verilebilirdi.

                            ddlCity.append(opt); // şehir dropdownlist'ine bu şehri ekle. sonuna ekle.
                        }

                    })
            }

    });
    $("#ilce").change(function () {

            var ddlCountry = $(this); // ülke dropdownlist'i elimize aldık
            var il_id = ddlCountry.val(); // seçilen ülke id'sini aldık

        if (il_id != "0" || il_id != "-1") // eğer ülke id' değeri -1 den farklıysa(seçilmemiş), 0 'dan farklıysa (Lütfen seçiniz optionu) , kişi bir ülke seçmiş demektir, ozaman işlemi yaparız
            {
            $("#mahalle option").not(":first").remove(); // ülke dropdownlist'in ilk elemanı hariç hepsini sil. ilk elemanı = lütfen seçiniz yazısıdır.

                $.ajax({ // ajax ile asenkron sunucu isteği yaparız
                    method: "GET", // tip get
                    url: '@Url.Action("Get_Mahalle", "Hesap")' + '/' + il_id // url'yi Home/GetCitiesByCountry/id : olarak yaparız. seçilen ülkeye göre şehir getirtiriz.
                }).done( // başarılı olduğunda
                    function (result) { // result = geri gelen değer

                        var ddlCity = $("#mahalle"); // şehir dropdownlist'i elimize alırız

                        for (var i = 0; i < result.length; i++) { // gelen değerde kaç satır veri varsa okadar döneriz.
                            var cityName = result[i].Ad; // sıradaki verinin şehrin adını
                            var cityId = result[i].id; // şehrin id'sini alırız
                            var opt = $("<option></option>"); // option öğesi oluşturur, aşağıda da buna özellik veririz.

                            opt.text(cityName); // option'un text'ine şehrin ismini ver
                            opt.attr("value", cityId); // value özelliğine şehrin id'sini ver.
                            //opt.val(cityId); // şehrin id'si böyle de verilebilirdi.

                            ddlCity.append(opt); // şehir dropdownlist'ine bu şehri ekle. sonuna ekle.
                        }

                    })
            }

        });

</script>